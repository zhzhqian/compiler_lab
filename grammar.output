Terminals unused in grammar

   T_SEPERATOR
   T_BIT_OPERATOR


State 20 conflicts: 3 reduce/reduce
State 26 conflicts: 2 reduce/reduce
State 31 conflicts: 1 shift/reduce
State 36 conflicts: 1 reduce/reduce
State 55 conflicts: 15 shift/reduce
State 63 conflicts: 15 shift/reduce


Grammar

    0 $accept: LANGUIGE $end

    1 LANGUIGE: LANGUIGE PARTITION
    2         | %empty

    3 PARTITION: DECLARATION ';'
    4          | DEFINITION ';'
    5          | FUNCTIONDEF

    6 FUNCTIONDEF: TYPE ID '(' PARAS ')' '{' STATEMENTS RETURN_STAT '}'

    7 PARAS: PARAS ',' PARA
    8      | PARA

    9 PARA: TYPE ID
   10     | %empty

   11 STATEMENTS: STATEMENTS STATEMENT
   12           | STATEMENT
   13           | %empty

   14 STATEMENT: DECLARATION ';'
   15          | DEFINITION ';'
   16          | EXPRESSION ';'
   17          | IF_BLOCK
   18          | WHILE_BLOCK
   19          | STAT_BODY
   20          | BREAK ';'
   21          | FOR_BLOCK

   22 STAT_BODY: '{' STATEMENTS '}'

   23 RETURN_STAT: RETURN BOOL_EXPRESSION ';'
   24            | RETURN ';'
   25            | %empty

   26 DECLARATION: TYPE IDS

   27 MIDS: MIDS ',' IDS
   28     | IDS

   29 IDS: BOOL_EXPRESSION
   30    | VALUE
   31    | %empty

   32 DEFINITION: TYPE ID EQUAL EXPRESSION
   33           | TYPE ID '[' INT_VALUE ']'

   34 EXPRESSION: FUNCTIONCALL
   35           | ID EQUAL EXPRESSION
   36           | EXPRESSION OPERATOR EXPRESSION
   37           | OPERATOR EXPRESSION
   38           | T_BOOL_OPERATOR EXPRESSION
   39           | VALUE
   40           | ID
   41           | ID T_INCRDECR
   42           | T_INCRDECR ID
   43           | '(' EXPRESSION ')'

   44 BOOL_EXPRESSION: EXPRESSION T_BOOL_OPERATOR BOOL_EXPRESSION
   45                | EXPRESSION

   46 VALUE: INT_VALUE
   47      | FLOAT_VALUE
   48      | BOOL_VALUE
   49      | STRING

   50 FUNCTIONCALL: ID '(' MIDS ')'

   51 IF_BLOCK: IF '(' BOOL_EXPRESSION ')' STATEMENT
   52         | IF '(' BOOL_EXPRESSION ')' STATEMENT ELSE STATEMENT

   53 $@1: %empty

   54 WHILE_BLOCK: WHILE '(' BOOL_EXPRESSION ')' STATEMENT $@1

   55 FOR_BLOCK: FOR '(' FOR_INITIAL ';' BOOL_EXPRESSION ';' FOR_ITERATE ')' STATEMENT

   56 FOR_INITIAL: EXPRESSION
   57            | %empty

   58 FOR_ITERATE: EXPRESSION
   59            | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 43 50 51 52 54 55
')' (41) 6 43 50 51 52 54 55
',' (44) 7 27
';' (59) 3 4 14 15 16 20 23 24 55
'[' (91) 33
']' (93) 33
'{' (123) 6 22
'}' (125) 6 22
error (256)
TYPE (258) 6 9 26 32 33
ID (259) 6 9 32 33 35 40 41 42 50
OPERATOR (260) 36 37
INT_VALUE (261) 33 46
FLOAT_VALUE (262) 47
T_SEPERATOR (263)
LOWER_THAN_ELSE (264)
ELSE (265) 52
IF (266) 51 52
WHILE (267) 54
BREAK (268) 20
FOR (269) 55
STRING (270) 49
BOOL_VALUE (271) 48
EQUAL (272) 32 35
T_BOOL_OPERATOR (273) 38 44
T_BIT_OPERATOR (274)
RETURN (275) 23 24
T_INCRDECR (276) 41 42


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
LANGUIGE (31)
    on left: 1 2, on right: 0 1
PARTITION (32)
    on left: 3 4 5, on right: 1
FUNCTIONDEF (33)
    on left: 6, on right: 5
PARAS (34)
    on left: 7 8, on right: 6 7
PARA (35)
    on left: 9 10, on right: 7 8
STATEMENTS (36)
    on left: 11 12 13, on right: 6 11 22
STATEMENT (37)
    on left: 14 15 16 17 18 19 20 21, on right: 11 12 51 52 54 55
STAT_BODY (38)
    on left: 22, on right: 19
RETURN_STAT (39)
    on left: 23 24 25, on right: 6
DECLARATION (40)
    on left: 26, on right: 3 14
MIDS (41)
    on left: 27 28, on right: 27 50
IDS (42)
    on left: 29 30 31, on right: 26 27 28
DEFINITION (43)
    on left: 32 33, on right: 4 15
EXPRESSION (44)
    on left: 34 35 36 37 38 39 40 41 42 43, on right: 16 32 35 36 37
    38 43 44 45 56 58
BOOL_EXPRESSION (45)
    on left: 44 45, on right: 23 29 44 51 52 54 55
VALUE (46)
    on left: 46 47 48 49, on right: 30 39
FUNCTIONCALL (47)
    on left: 50, on right: 34
IF_BLOCK (48)
    on left: 51 52, on right: 17
WHILE_BLOCK (49)
    on left: 54, on right: 18
$@1 (50)
    on left: 53, on right: 54
FOR_BLOCK (51)
    on left: 55, on right: 21
FOR_INITIAL (52)
    on left: 56 57, on right: 55
FOR_ITERATE (53)
    on left: 58 59, on right: 55


State 0

    0 $accept: . LANGUIGE $end

    $default  reduce using rule 2 (LANGUIGE)

    LANGUIGE  go to state 1


State 1

    0 $accept: LANGUIGE . $end
    1 LANGUIGE: LANGUIGE . PARTITION

    $end  shift, and go to state 2
    TYPE  shift, and go to state 3

    PARTITION    go to state 4
    FUNCTIONDEF  go to state 5
    DECLARATION  go to state 6
    DEFINITION   go to state 7


State 2

    0 $accept: LANGUIGE $end .

    $default  accept


State 3

    6 FUNCTIONDEF: TYPE . ID '(' PARAS ')' '{' STATEMENTS RETURN_STAT '}'
   26 DECLARATION: TYPE . IDS
   32 DEFINITION: TYPE . ID EQUAL EXPRESSION
   33           | TYPE . ID '[' INT_VALUE ']'

    ID               shift, and go to state 8
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    $default  reduce using rule 31 (IDS)

    IDS              go to state 17
    EXPRESSION       go to state 18
    BOOL_EXPRESSION  go to state 19
    VALUE            go to state 20
    FUNCTIONCALL     go to state 21


State 4

    1 LANGUIGE: LANGUIGE PARTITION .

    $default  reduce using rule 1 (LANGUIGE)


State 5

    5 PARTITION: FUNCTIONDEF .

    $default  reduce using rule 5 (PARTITION)


State 6

    3 PARTITION: DECLARATION . ';'

    ';'  shift, and go to state 22


State 7

    4 PARTITION: DEFINITION . ';'

    ';'  shift, and go to state 23


State 8

    6 FUNCTIONDEF: TYPE ID . '(' PARAS ')' '{' STATEMENTS RETURN_STAT '}'
   32 DEFINITION: TYPE ID . EQUAL EXPRESSION
   33           | TYPE ID . '[' INT_VALUE ']'
   35 EXPRESSION: ID . EQUAL EXPRESSION
   40           | ID .
   41           | ID . T_INCRDECR
   50 FUNCTIONCALL: ID . '(' MIDS ')'

    EQUAL       shift, and go to state 24
    T_INCRDECR  shift, and go to state 25
    '('         shift, and go to state 26
    '['         shift, and go to state 27

    $default  reduce using rule 40 (EXPRESSION)


State 9

   37 EXPRESSION: OPERATOR . EXPRESSION

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    EXPRESSION    go to state 29
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21


State 10

   46 VALUE: INT_VALUE .

    $default  reduce using rule 46 (VALUE)


State 11

   47 VALUE: FLOAT_VALUE .

    $default  reduce using rule 47 (VALUE)


State 12

   49 VALUE: STRING .

    $default  reduce using rule 49 (VALUE)


State 13

   48 VALUE: BOOL_VALUE .

    $default  reduce using rule 48 (VALUE)


State 14

   38 EXPRESSION: T_BOOL_OPERATOR . EXPRESSION

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    EXPRESSION    go to state 31
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21


State 15

   42 EXPRESSION: T_INCRDECR . ID

    ID  shift, and go to state 32


State 16

   43 EXPRESSION: '(' . EXPRESSION ')'

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    EXPRESSION    go to state 33
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21


State 17

   26 DECLARATION: TYPE IDS .

    $default  reduce using rule 26 (DECLARATION)


State 18

   36 EXPRESSION: EXPRESSION . OPERATOR EXPRESSION
   44 BOOL_EXPRESSION: EXPRESSION . T_BOOL_OPERATOR BOOL_EXPRESSION
   45                | EXPRESSION .

    OPERATOR         shift, and go to state 34
    T_BOOL_OPERATOR  shift, and go to state 35

    $default  reduce using rule 45 (BOOL_EXPRESSION)


State 19

   29 IDS: BOOL_EXPRESSION .

    $default  reduce using rule 29 (IDS)


State 20

   30 IDS: VALUE .
   39 EXPRESSION: VALUE .

    OPERATOR         reduce using rule 39 (EXPRESSION)
    T_BOOL_OPERATOR  reduce using rule 39 (EXPRESSION)
    ';'              reduce using rule 30 (IDS)
    ';'              [reduce using rule 39 (EXPRESSION)]
    ')'              reduce using rule 30 (IDS)
    ')'              [reduce using rule 39 (EXPRESSION)]
    ','              reduce using rule 30 (IDS)
    ','              [reduce using rule 39 (EXPRESSION)]
    $default         reduce using rule 30 (IDS)


State 21

   34 EXPRESSION: FUNCTIONCALL .

    $default  reduce using rule 34 (EXPRESSION)


State 22

    3 PARTITION: DECLARATION ';' .

    $default  reduce using rule 3 (PARTITION)


State 23

    4 PARTITION: DEFINITION ';' .

    $default  reduce using rule 4 (PARTITION)


State 24

   32 DEFINITION: TYPE ID EQUAL . EXPRESSION
   35 EXPRESSION: ID EQUAL . EXPRESSION

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    EXPRESSION    go to state 36
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21


State 25

   41 EXPRESSION: ID T_INCRDECR .

    $default  reduce using rule 41 (EXPRESSION)


State 26

    6 FUNCTIONDEF: TYPE ID '(' . PARAS ')' '{' STATEMENTS RETURN_STAT '}'
   50 FUNCTIONCALL: ID '(' . MIDS ')'

    TYPE             shift, and go to state 37
    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    ')'       reduce using rule 10 (PARA)
    ')'       [reduce using rule 31 (IDS)]
    ','       reduce using rule 10 (PARA)
    ','       [reduce using rule 31 (IDS)]
    $default  reduce using rule 10 (PARA)

    PARAS            go to state 38
    PARA             go to state 39
    MIDS             go to state 40
    IDS              go to state 41
    EXPRESSION       go to state 18
    BOOL_EXPRESSION  go to state 19
    VALUE            go to state 20
    FUNCTIONCALL     go to state 21


State 27

   33 DEFINITION: TYPE ID '[' . INT_VALUE ']'

    INT_VALUE  shift, and go to state 42


State 28

   35 EXPRESSION: ID . EQUAL EXPRESSION
   40           | ID .
   41           | ID . T_INCRDECR
   50 FUNCTIONCALL: ID . '(' MIDS ')'

    EQUAL       shift, and go to state 43
    T_INCRDECR  shift, and go to state 25
    '('         shift, and go to state 44

    $default  reduce using rule 40 (EXPRESSION)


State 29

   36 EXPRESSION: EXPRESSION . OPERATOR EXPRESSION
   37           | OPERATOR EXPRESSION .

    $default  reduce using rule 37 (EXPRESSION)


State 30

   39 EXPRESSION: VALUE .

    $default  reduce using rule 39 (EXPRESSION)


State 31

   36 EXPRESSION: EXPRESSION . OPERATOR EXPRESSION
   38           | T_BOOL_OPERATOR EXPRESSION .

    OPERATOR  shift, and go to state 34

    OPERATOR  [reduce using rule 38 (EXPRESSION)]
    $default  reduce using rule 38 (EXPRESSION)


State 32

   42 EXPRESSION: T_INCRDECR ID .

    $default  reduce using rule 42 (EXPRESSION)


State 33

   36 EXPRESSION: EXPRESSION . OPERATOR EXPRESSION
   43           | '(' EXPRESSION . ')'

    OPERATOR  shift, and go to state 34
    ')'       shift, and go to state 45


State 34

   36 EXPRESSION: EXPRESSION OPERATOR . EXPRESSION

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    EXPRESSION    go to state 46
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21


State 35

   44 BOOL_EXPRESSION: EXPRESSION T_BOOL_OPERATOR . BOOL_EXPRESSION

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    EXPRESSION       go to state 18
    BOOL_EXPRESSION  go to state 47
    VALUE            go to state 30
    FUNCTIONCALL     go to state 21


State 36

   32 DEFINITION: TYPE ID EQUAL EXPRESSION .
   35 EXPRESSION: ID EQUAL EXPRESSION .
   36           | EXPRESSION . OPERATOR EXPRESSION

    ';'       reduce using rule 32 (DEFINITION)
    ';'       [reduce using rule 35 (EXPRESSION)]
    $default  reduce using rule 35 (EXPRESSION)


State 37

    9 PARA: TYPE . ID

    ID  shift, and go to state 48


State 38

    6 FUNCTIONDEF: TYPE ID '(' PARAS . ')' '{' STATEMENTS RETURN_STAT '}'
    7 PARAS: PARAS . ',' PARA

    ')'  shift, and go to state 49
    ','  shift, and go to state 50


State 39

    8 PARAS: PARA .

    $default  reduce using rule 8 (PARAS)


State 40

   27 MIDS: MIDS . ',' IDS
   50 FUNCTIONCALL: ID '(' MIDS . ')'

    ')'  shift, and go to state 51
    ','  shift, and go to state 52


State 41

   28 MIDS: IDS .

    $default  reduce using rule 28 (MIDS)


State 42

   33 DEFINITION: TYPE ID '[' INT_VALUE . ']'

    ']'  shift, and go to state 53


State 43

   35 EXPRESSION: ID EQUAL . EXPRESSION

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    EXPRESSION    go to state 54
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21


State 44

   50 FUNCTIONCALL: ID '(' . MIDS ')'

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    $default  reduce using rule 31 (IDS)

    MIDS             go to state 40
    IDS              go to state 41
    EXPRESSION       go to state 18
    BOOL_EXPRESSION  go to state 19
    VALUE            go to state 20
    FUNCTIONCALL     go to state 21


State 45

   43 EXPRESSION: '(' EXPRESSION ')' .

    $default  reduce using rule 43 (EXPRESSION)


State 46

   36 EXPRESSION: EXPRESSION . OPERATOR EXPRESSION
   36           | EXPRESSION OPERATOR EXPRESSION .

    $default  reduce using rule 36 (EXPRESSION)


State 47

   44 BOOL_EXPRESSION: EXPRESSION T_BOOL_OPERATOR BOOL_EXPRESSION .

    $default  reduce using rule 44 (BOOL_EXPRESSION)


State 48

    9 PARA: TYPE ID .

    $default  reduce using rule 9 (PARA)


State 49

    6 FUNCTIONDEF: TYPE ID '(' PARAS ')' . '{' STATEMENTS RETURN_STAT '}'

    '{'  shift, and go to state 55


State 50

    7 PARAS: PARAS ',' . PARA

    TYPE  shift, and go to state 37

    $default  reduce using rule 10 (PARA)

    PARA  go to state 56


State 51

   50 FUNCTIONCALL: ID '(' MIDS ')' .

    $default  reduce using rule 50 (FUNCTIONCALL)


State 52

   27 MIDS: MIDS ',' . IDS

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    $default  reduce using rule 31 (IDS)

    IDS              go to state 57
    EXPRESSION       go to state 18
    BOOL_EXPRESSION  go to state 19
    VALUE            go to state 20
    FUNCTIONCALL     go to state 21


State 53

   33 DEFINITION: TYPE ID '[' INT_VALUE ']' .

    $default  reduce using rule 33 (DEFINITION)


State 54

   35 EXPRESSION: ID EQUAL EXPRESSION .
   36           | EXPRESSION . OPERATOR EXPRESSION

    $default  reduce using rule 35 (EXPRESSION)


State 55

    6 FUNCTIONDEF: TYPE ID '(' PARAS ')' '{' . STATEMENTS RETURN_STAT '}'

    TYPE             shift, and go to state 58
    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    IF               shift, and go to state 59
    WHILE            shift, and go to state 60
    BREAK            shift, and go to state 61
    FOR              shift, and go to state 62
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16
    '{'              shift, and go to state 63

    TYPE             [reduce using rule 13 (STATEMENTS)]
    ID               [reduce using rule 13 (STATEMENTS)]
    OPERATOR         [reduce using rule 13 (STATEMENTS)]
    INT_VALUE        [reduce using rule 13 (STATEMENTS)]
    FLOAT_VALUE      [reduce using rule 13 (STATEMENTS)]
    IF               [reduce using rule 13 (STATEMENTS)]
    WHILE            [reduce using rule 13 (STATEMENTS)]
    BREAK            [reduce using rule 13 (STATEMENTS)]
    FOR              [reduce using rule 13 (STATEMENTS)]
    STRING           [reduce using rule 13 (STATEMENTS)]
    BOOL_VALUE       [reduce using rule 13 (STATEMENTS)]
    T_BOOL_OPERATOR  [reduce using rule 13 (STATEMENTS)]
    T_INCRDECR       [reduce using rule 13 (STATEMENTS)]
    '('              [reduce using rule 13 (STATEMENTS)]
    '{'              [reduce using rule 13 (STATEMENTS)]
    $default         reduce using rule 13 (STATEMENTS)

    STATEMENTS    go to state 64
    STATEMENT     go to state 65
    STAT_BODY     go to state 66
    DECLARATION   go to state 67
    DEFINITION    go to state 68
    EXPRESSION    go to state 69
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21
    IF_BLOCK      go to state 70
    WHILE_BLOCK   go to state 71
    FOR_BLOCK     go to state 72


State 56

    7 PARAS: PARAS ',' PARA .

    $default  reduce using rule 7 (PARAS)


State 57

   27 MIDS: MIDS ',' IDS .

    $default  reduce using rule 27 (MIDS)


State 58

   26 DECLARATION: TYPE . IDS
   32 DEFINITION: TYPE . ID EQUAL EXPRESSION
   33           | TYPE . ID '[' INT_VALUE ']'

    ID               shift, and go to state 73
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    $default  reduce using rule 31 (IDS)

    IDS              go to state 17
    EXPRESSION       go to state 18
    BOOL_EXPRESSION  go to state 19
    VALUE            go to state 20
    FUNCTIONCALL     go to state 21


State 59

   51 IF_BLOCK: IF . '(' BOOL_EXPRESSION ')' STATEMENT
   52         | IF . '(' BOOL_EXPRESSION ')' STATEMENT ELSE STATEMENT

    '('  shift, and go to state 74


State 60

   54 WHILE_BLOCK: WHILE . '(' BOOL_EXPRESSION ')' STATEMENT $@1

    '('  shift, and go to state 75


State 61

   20 STATEMENT: BREAK . ';'

    ';'  shift, and go to state 76


State 62

   55 FOR_BLOCK: FOR . '(' FOR_INITIAL ';' BOOL_EXPRESSION ';' FOR_ITERATE ')' STATEMENT

    '('  shift, and go to state 77


State 63

   22 STAT_BODY: '{' . STATEMENTS '}'

    TYPE             shift, and go to state 58
    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    IF               shift, and go to state 59
    WHILE            shift, and go to state 60
    BREAK            shift, and go to state 61
    FOR              shift, and go to state 62
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16
    '{'              shift, and go to state 63

    TYPE             [reduce using rule 13 (STATEMENTS)]
    ID               [reduce using rule 13 (STATEMENTS)]
    OPERATOR         [reduce using rule 13 (STATEMENTS)]
    INT_VALUE        [reduce using rule 13 (STATEMENTS)]
    FLOAT_VALUE      [reduce using rule 13 (STATEMENTS)]
    IF               [reduce using rule 13 (STATEMENTS)]
    WHILE            [reduce using rule 13 (STATEMENTS)]
    BREAK            [reduce using rule 13 (STATEMENTS)]
    FOR              [reduce using rule 13 (STATEMENTS)]
    STRING           [reduce using rule 13 (STATEMENTS)]
    BOOL_VALUE       [reduce using rule 13 (STATEMENTS)]
    T_BOOL_OPERATOR  [reduce using rule 13 (STATEMENTS)]
    T_INCRDECR       [reduce using rule 13 (STATEMENTS)]
    '('              [reduce using rule 13 (STATEMENTS)]
    '{'              [reduce using rule 13 (STATEMENTS)]
    $default         reduce using rule 13 (STATEMENTS)

    STATEMENTS    go to state 78
    STATEMENT     go to state 65
    STAT_BODY     go to state 66
    DECLARATION   go to state 67
    DEFINITION    go to state 68
    EXPRESSION    go to state 69
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21
    IF_BLOCK      go to state 70
    WHILE_BLOCK   go to state 71
    FOR_BLOCK     go to state 72


State 64

    6 FUNCTIONDEF: TYPE ID '(' PARAS ')' '{' STATEMENTS . RETURN_STAT '}'
   11 STATEMENTS: STATEMENTS . STATEMENT

    TYPE             shift, and go to state 58
    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    IF               shift, and go to state 59
    WHILE            shift, and go to state 60
    BREAK            shift, and go to state 61
    FOR              shift, and go to state 62
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    RETURN           shift, and go to state 79
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16
    '{'              shift, and go to state 63

    $default  reduce using rule 25 (RETURN_STAT)

    STATEMENT     go to state 80
    STAT_BODY     go to state 66
    RETURN_STAT   go to state 81
    DECLARATION   go to state 67
    DEFINITION    go to state 68
    EXPRESSION    go to state 69
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21
    IF_BLOCK      go to state 70
    WHILE_BLOCK   go to state 71
    FOR_BLOCK     go to state 72


State 65

   12 STATEMENTS: STATEMENT .

    $default  reduce using rule 12 (STATEMENTS)


State 66

   19 STATEMENT: STAT_BODY .

    $default  reduce using rule 19 (STATEMENT)


State 67

   14 STATEMENT: DECLARATION . ';'

    ';'  shift, and go to state 82


State 68

   15 STATEMENT: DEFINITION . ';'

    ';'  shift, and go to state 83


State 69

   16 STATEMENT: EXPRESSION . ';'
   36 EXPRESSION: EXPRESSION . OPERATOR EXPRESSION

    OPERATOR  shift, and go to state 34
    ';'       shift, and go to state 84


State 70

   17 STATEMENT: IF_BLOCK .

    $default  reduce using rule 17 (STATEMENT)


State 71

   18 STATEMENT: WHILE_BLOCK .

    $default  reduce using rule 18 (STATEMENT)


State 72

   21 STATEMENT: FOR_BLOCK .

    $default  reduce using rule 21 (STATEMENT)


State 73

   32 DEFINITION: TYPE ID . EQUAL EXPRESSION
   33           | TYPE ID . '[' INT_VALUE ']'
   35 EXPRESSION: ID . EQUAL EXPRESSION
   40           | ID .
   41           | ID . T_INCRDECR
   50 FUNCTIONCALL: ID . '(' MIDS ')'

    EQUAL       shift, and go to state 24
    T_INCRDECR  shift, and go to state 25
    '('         shift, and go to state 44
    '['         shift, and go to state 27

    $default  reduce using rule 40 (EXPRESSION)


State 74

   51 IF_BLOCK: IF '(' . BOOL_EXPRESSION ')' STATEMENT
   52         | IF '(' . BOOL_EXPRESSION ')' STATEMENT ELSE STATEMENT

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    EXPRESSION       go to state 18
    BOOL_EXPRESSION  go to state 85
    VALUE            go to state 30
    FUNCTIONCALL     go to state 21


State 75

   54 WHILE_BLOCK: WHILE '(' . BOOL_EXPRESSION ')' STATEMENT $@1

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    EXPRESSION       go to state 18
    BOOL_EXPRESSION  go to state 86
    VALUE            go to state 30
    FUNCTIONCALL     go to state 21


State 76

   20 STATEMENT: BREAK ';' .

    $default  reduce using rule 20 (STATEMENT)


State 77

   55 FOR_BLOCK: FOR '(' . FOR_INITIAL ';' BOOL_EXPRESSION ';' FOR_ITERATE ')' STATEMENT

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    $default  reduce using rule 57 (FOR_INITIAL)

    EXPRESSION    go to state 87
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21
    FOR_INITIAL   go to state 88


State 78

   11 STATEMENTS: STATEMENTS . STATEMENT
   22 STAT_BODY: '{' STATEMENTS . '}'

    TYPE             shift, and go to state 58
    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    IF               shift, and go to state 59
    WHILE            shift, and go to state 60
    BREAK            shift, and go to state 61
    FOR              shift, and go to state 62
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16
    '{'              shift, and go to state 63
    '}'              shift, and go to state 89

    STATEMENT     go to state 80
    STAT_BODY     go to state 66
    DECLARATION   go to state 67
    DEFINITION    go to state 68
    EXPRESSION    go to state 69
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21
    IF_BLOCK      go to state 70
    WHILE_BLOCK   go to state 71
    FOR_BLOCK     go to state 72


State 79

   23 RETURN_STAT: RETURN . BOOL_EXPRESSION ';'
   24            | RETURN . ';'

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    ';'              shift, and go to state 90
    '('              shift, and go to state 16

    EXPRESSION       go to state 18
    BOOL_EXPRESSION  go to state 91
    VALUE            go to state 30
    FUNCTIONCALL     go to state 21


State 80

   11 STATEMENTS: STATEMENTS STATEMENT .

    $default  reduce using rule 11 (STATEMENTS)


State 81

    6 FUNCTIONDEF: TYPE ID '(' PARAS ')' '{' STATEMENTS RETURN_STAT . '}'

    '}'  shift, and go to state 92


State 82

   14 STATEMENT: DECLARATION ';' .

    $default  reduce using rule 14 (STATEMENT)


State 83

   15 STATEMENT: DEFINITION ';' .

    $default  reduce using rule 15 (STATEMENT)


State 84

   16 STATEMENT: EXPRESSION ';' .

    $default  reduce using rule 16 (STATEMENT)


State 85

   51 IF_BLOCK: IF '(' BOOL_EXPRESSION . ')' STATEMENT
   52         | IF '(' BOOL_EXPRESSION . ')' STATEMENT ELSE STATEMENT

    ')'  shift, and go to state 93


State 86

   54 WHILE_BLOCK: WHILE '(' BOOL_EXPRESSION . ')' STATEMENT $@1

    ')'  shift, and go to state 94


State 87

   36 EXPRESSION: EXPRESSION . OPERATOR EXPRESSION
   56 FOR_INITIAL: EXPRESSION .

    OPERATOR  shift, and go to state 34

    $default  reduce using rule 56 (FOR_INITIAL)


State 88

   55 FOR_BLOCK: FOR '(' FOR_INITIAL . ';' BOOL_EXPRESSION ';' FOR_ITERATE ')' STATEMENT

    ';'  shift, and go to state 95


State 89

   22 STAT_BODY: '{' STATEMENTS '}' .

    $default  reduce using rule 22 (STAT_BODY)


State 90

   24 RETURN_STAT: RETURN ';' .

    $default  reduce using rule 24 (RETURN_STAT)


State 91

   23 RETURN_STAT: RETURN BOOL_EXPRESSION . ';'

    ';'  shift, and go to state 96


State 92

    6 FUNCTIONDEF: TYPE ID '(' PARAS ')' '{' STATEMENTS RETURN_STAT '}' .

    $default  reduce using rule 6 (FUNCTIONDEF)


State 93

   51 IF_BLOCK: IF '(' BOOL_EXPRESSION ')' . STATEMENT
   52         | IF '(' BOOL_EXPRESSION ')' . STATEMENT ELSE STATEMENT

    TYPE             shift, and go to state 58
    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    IF               shift, and go to state 59
    WHILE            shift, and go to state 60
    BREAK            shift, and go to state 61
    FOR              shift, and go to state 62
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16
    '{'              shift, and go to state 63

    STATEMENT     go to state 97
    STAT_BODY     go to state 66
    DECLARATION   go to state 67
    DEFINITION    go to state 68
    EXPRESSION    go to state 69
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21
    IF_BLOCK      go to state 70
    WHILE_BLOCK   go to state 71
    FOR_BLOCK     go to state 72


State 94

   54 WHILE_BLOCK: WHILE '(' BOOL_EXPRESSION ')' . STATEMENT $@1

    TYPE             shift, and go to state 58
    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    IF               shift, and go to state 59
    WHILE            shift, and go to state 60
    BREAK            shift, and go to state 61
    FOR              shift, and go to state 62
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16
    '{'              shift, and go to state 63

    STATEMENT     go to state 98
    STAT_BODY     go to state 66
    DECLARATION   go to state 67
    DEFINITION    go to state 68
    EXPRESSION    go to state 69
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21
    IF_BLOCK      go to state 70
    WHILE_BLOCK   go to state 71
    FOR_BLOCK     go to state 72


State 95

   55 FOR_BLOCK: FOR '(' FOR_INITIAL ';' . BOOL_EXPRESSION ';' FOR_ITERATE ')' STATEMENT

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    EXPRESSION       go to state 18
    BOOL_EXPRESSION  go to state 99
    VALUE            go to state 30
    FUNCTIONCALL     go to state 21


State 96

   23 RETURN_STAT: RETURN BOOL_EXPRESSION ';' .

    $default  reduce using rule 23 (RETURN_STAT)


State 97

   51 IF_BLOCK: IF '(' BOOL_EXPRESSION ')' STATEMENT .
   52         | IF '(' BOOL_EXPRESSION ')' STATEMENT . ELSE STATEMENT

    ELSE  shift, and go to state 100

    $default  reduce using rule 51 (IF_BLOCK)


State 98

   54 WHILE_BLOCK: WHILE '(' BOOL_EXPRESSION ')' STATEMENT . $@1

    $default  reduce using rule 53 ($@1)

    $@1  go to state 101


State 99

   55 FOR_BLOCK: FOR '(' FOR_INITIAL ';' BOOL_EXPRESSION . ';' FOR_ITERATE ')' STATEMENT

    ';'  shift, and go to state 102


State 100

   52 IF_BLOCK: IF '(' BOOL_EXPRESSION ')' STATEMENT ELSE . STATEMENT

    TYPE             shift, and go to state 58
    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    IF               shift, and go to state 59
    WHILE            shift, and go to state 60
    BREAK            shift, and go to state 61
    FOR              shift, and go to state 62
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16
    '{'              shift, and go to state 63

    STATEMENT     go to state 103
    STAT_BODY     go to state 66
    DECLARATION   go to state 67
    DEFINITION    go to state 68
    EXPRESSION    go to state 69
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21
    IF_BLOCK      go to state 70
    WHILE_BLOCK   go to state 71
    FOR_BLOCK     go to state 72


State 101

   54 WHILE_BLOCK: WHILE '(' BOOL_EXPRESSION ')' STATEMENT $@1 .

    $default  reduce using rule 54 (WHILE_BLOCK)


State 102

   55 FOR_BLOCK: FOR '(' FOR_INITIAL ';' BOOL_EXPRESSION ';' . FOR_ITERATE ')' STATEMENT

    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16

    $default  reduce using rule 59 (FOR_ITERATE)

    EXPRESSION    go to state 104
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21
    FOR_ITERATE   go to state 105


State 103

   52 IF_BLOCK: IF '(' BOOL_EXPRESSION ')' STATEMENT ELSE STATEMENT .

    $default  reduce using rule 52 (IF_BLOCK)


State 104

   36 EXPRESSION: EXPRESSION . OPERATOR EXPRESSION
   58 FOR_ITERATE: EXPRESSION .

    OPERATOR  shift, and go to state 34

    $default  reduce using rule 58 (FOR_ITERATE)


State 105

   55 FOR_BLOCK: FOR '(' FOR_INITIAL ';' BOOL_EXPRESSION ';' FOR_ITERATE . ')' STATEMENT

    ')'  shift, and go to state 106


State 106

   55 FOR_BLOCK: FOR '(' FOR_INITIAL ';' BOOL_EXPRESSION ';' FOR_ITERATE ')' . STATEMENT

    TYPE             shift, and go to state 58
    ID               shift, and go to state 28
    OPERATOR         shift, and go to state 9
    INT_VALUE        shift, and go to state 10
    FLOAT_VALUE      shift, and go to state 11
    IF               shift, and go to state 59
    WHILE            shift, and go to state 60
    BREAK            shift, and go to state 61
    FOR              shift, and go to state 62
    STRING           shift, and go to state 12
    BOOL_VALUE       shift, and go to state 13
    T_BOOL_OPERATOR  shift, and go to state 14
    T_INCRDECR       shift, and go to state 15
    '('              shift, and go to state 16
    '{'              shift, and go to state 63

    STATEMENT     go to state 107
    STAT_BODY     go to state 66
    DECLARATION   go to state 67
    DEFINITION    go to state 68
    EXPRESSION    go to state 69
    VALUE         go to state 30
    FUNCTIONCALL  go to state 21
    IF_BLOCK      go to state 70
    WHILE_BLOCK   go to state 71
    FOR_BLOCK     go to state 72


State 107

   55 FOR_BLOCK: FOR '(' FOR_INITIAL ';' BOOL_EXPRESSION ';' FOR_ITERATE ')' STATEMENT .

    $default  reduce using rule 55 (FOR_BLOCK)
