Terminals unused in grammar

   T_BIT_OPERATOR
   T_SEPERATOR


State 3 conflicts: 1 shift/reduce
State 8 conflicts: 16 shift/reduce
State 11 conflicts: 1 shift/reduce
State 64 conflicts: 16 shift/reduce
State 120 conflicts: 5 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: Program PARTITION
    2        | %empty

    3 PARTITION: DEFINITIONS
    4          | FUNCTIONDEF
    5          | FUNCTIONDEC
    6          | DECLARATION

    7 FUNCTIONDEC: TYPE ID '(' PARAMETERS ')' ';'

    8 FUNCTIONDEF: FUNC_DEF_PREFIX STATEMENTS RETURN_STAT '}'

    9 FUNC_DEF_PREFIX: TYPE ID '(' PARAMETERS ')' '{'

   10 PARAMETERS: PARAS
   11           | %empty

   12 PARAS: PARAS ',' PARA
   13      | PARA

   14 PARA: TYPE ID

   15 TYPE: TYPE_BASE '*'
   16     | TYPE_BASE

   17 STATEMENTS: STATEMENTS STATEMENT
   18           | STATEMENT
   19           | %empty

   20 STATEMENT: DEFINITION
   21          | EXPRESSION ';'
   22          | IF_BLOCK
   23          | WHILE_BLOCK
   24          | STAT_BODY
   25          | BREAK ';'
   26          | CONTINUE ';'
   27          | FOR_BLOCK

   28 STAT_BODY: '{' TEMP_M STATEMENTS '}'

   29 TEMP_M: %empty

   30 RETURN_STAT: RETURN EXPRESSION ';'
   31            | RETURN ';'
   32            | %empty

   33 DECLARATION: STRUCT ID '{' TEMP_M DEFINITIONS '}'

   34 DEFINITIONS: DEFINITIONS DEFINITION
   35            | DEFINITION

   36 DEFINITION: TYPE VARIABLES ';'

   37 VARIABLES: VARIABLES ',' VARIABLE
   38          | VARIABLE

   39 VARIABLE: ID
   40         | ID EQUAL EXPRESSION
   41         | '*' ID EQUAL EXPRESSION
   42         | ID ARRS EQUAL LIST
   43         | '*' ID EQUAL LIST
   44         | ID ARRS
   45         | '*' ID

   46 LIST: '{' ACT_PARAS '}'

   47 ARRS: ARRS '[' INT_VALUE ']'
   48     | '[' INT_VALUE ']'

   49 EXPRESSION: FUNCTIONCALL
   50           | ID EQUAL EXPRESSION
   51           | VALUE
   52           | EXPRESSION OPERATOR1 EXPRESSION
   53           | EXPRESSION OPERATOR2 EXPRESSION
   54           | OPERATOR2 EXPRESSION
   55           | T_BOOL_OPERATOR EXPRESSION
   56           | L
   57           | ID T_INCRDECR
   58           | T_INCRDECR ID
   59           | '(' EXPRESSION ')'
   60           | ID

   61 L: L '[' EXPRESSION ']'
   62  | ID '[' EXPRESSION ']'

   63 BOOL_EXPRESSION: BOOL_EXPRESSION T_BOOL_OPERATOR BOOL_EXPRESSION
   64                | EXPRESSION
   65                | EXPRESSION T_RELATION EXPRESSION
   66                | T_BOOL_OPERATOR BOOL_EXPRESSION

   67 VALUE: INT_VALUE
   68      | FLOAT_VALUE
   69      | BOOL_VALUE
   70      | STRING

   71 FUNCTIONCALL: ID '(' ACT_PARAS ')'

   72 ACT_PARAS: ACT_PARAS ',' ACT_PARA
   73          | ACT_PARA
   74          | %empty

   75 ACT_PARA: BOOL_EXPRESSION

   76 IF_BLOCK: IF_PREFIX STATEMENT
   77         | IF_PREFIX STATEMENT ELSE STATEMENT

   78 IF_PREFIX: IF '(' BOOL_EXPRESSION ')'

   79 WHILE_BLOCK: WHILE_PREFIX STATEMENT

   80 WHILE_PREFIX: WHILE '(' BOOL_EXPRESSION ')'

   81 FOR_BLOCK: FOR_PREFIX FOR_ITERATES ')' STATEMENT

   82 FOR_PREFIX: FOR '(' FOR_INITIALS ';' BOOL_EXPRESSION ';'

   83 FOR_INITIALS: FOR_INITIAL
   84             | %empty

   85 FOR_INITIAL: FOR_INITIAL ',' EXPRESSION
   86            | EXPRESSION

   87 FOR_ITERATES: FOR_ITERATE
   88             | %empty

   89 FOR_ITERATE: FOR_ITERATE ',' EXPRESSION
   90            | EXPRESSION


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 9 59 71 78 80 82
')' (41) 7 9 59 71 78 80 81
'*' (42) 15 41 43 45
',' (44) 12 37 72 85 89
';' (59) 7 21 25 26 30 31 36 82
'[' (91) 47 48 61 62
']' (93) 47 48 61 62
'{' (123) 9 28 33 46
'}' (125) 8 28 33 46
error (256)
LOWER_THAN_ELSE (258)
ELSE (259) 77
ID (260) 7 9 14 33 39 40 41 42 43 44 45 50 57 58 60 62 71
EQUAL (261) 40 41 42 43 50
T_BOOL_OPERATOR (262) 55 63 66
T_RELATION (263) 65
OPERATOR2 (264) 53 54
OPERATOR1 (265) 52
T_BIT_OPERATOR (266)
TYPE_BASE (267) 15 16
INT_VALUE (268) 47 48 67
STRING (269) 70
FLOAT_VALUE (270) 68
BOOL_VALUE (271) 69
T_INCRDECR (272) 57 58
IF (273) 78
STRUCT (274) 33
WHILE (275) 80
BREAK (276) 25
FOR (277) 82
RETURN (278) 30 31
T_SEPERATOR (279)
CONTINUE (280) 26


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
Program (36)
    on left: 1 2, on right: 0 1
PARTITION (37)
    on left: 3 4 5 6, on right: 1
FUNCTIONDEC (38)
    on left: 7, on right: 5
FUNCTIONDEF (39)
    on left: 8, on right: 4
FUNC_DEF_PREFIX (40)
    on left: 9, on right: 8
PARAMETERS (41)
    on left: 10 11, on right: 7 9
PARAS (42)
    on left: 12 13, on right: 10 12
PARA (43)
    on left: 14, on right: 12 13
TYPE (44)
    on left: 15 16, on right: 7 9 14 36
STATEMENTS (45)
    on left: 17 18 19, on right: 8 17 28
STATEMENT (46)
    on left: 20 21 22 23 24 25 26 27, on right: 17 18 76 77 79 81
STAT_BODY (47)
    on left: 28, on right: 24
TEMP_M (48)
    on left: 29, on right: 28 33
RETURN_STAT (49)
    on left: 30 31 32, on right: 8
DECLARATION (50)
    on left: 33, on right: 6
DEFINITIONS (51)
    on left: 34 35, on right: 3 33 34
DEFINITION (52)
    on left: 36, on right: 20 34 35
VARIABLES (53)
    on left: 37 38, on right: 36 37
VARIABLE (54)
    on left: 39 40 41 42 43 44 45, on right: 37 38
LIST (55)
    on left: 46, on right: 42 43
ARRS (56)
    on left: 47 48, on right: 42 44 47
EXPRESSION (57)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60, on right: 21 30 40
    41 50 52 53 54 55 59 61 62 64 65 85 86 89 90
L (58)
    on left: 61 62, on right: 56 61
BOOL_EXPRESSION (59)
    on left: 63 64 65 66, on right: 63 66 75 78 80 82
VALUE (60)
    on left: 67 68 69 70, on right: 51
FUNCTIONCALL (61)
    on left: 71, on right: 49
ACT_PARAS (62)
    on left: 72 73 74, on right: 46 71 72
ACT_PARA (63)
    on left: 75, on right: 72 73
IF_BLOCK (64)
    on left: 76 77, on right: 22
IF_PREFIX (65)
    on left: 78, on right: 76 77
WHILE_BLOCK (66)
    on left: 79, on right: 23
WHILE_PREFIX (67)
    on left: 80, on right: 79
FOR_BLOCK (68)
    on left: 81, on right: 27
FOR_PREFIX (69)
    on left: 82, on right: 81
FOR_INITIALS (70)
    on left: 83 84, on right: 82
FOR_INITIAL (71)
    on left: 85 86, on right: 83 85
FOR_ITERATES (72)
    on left: 87 88, on right: 81
FOR_ITERATE (73)
    on left: 89 90, on right: 87 89


State 0

    0 $accept: . Program $end

    $default  reduce using rule 2 (Program)

    Program  go to state 1


State 1

    0 $accept: Program . $end
    1 Program: Program . PARTITION

    $end       shift, and go to state 2
    TYPE_BASE  shift, and go to state 3
    STRUCT     shift, and go to state 4

    PARTITION        go to state 5
    FUNCTIONDEC      go to state 6
    FUNCTIONDEF      go to state 7
    FUNC_DEF_PREFIX  go to state 8
    TYPE             go to state 9
    DECLARATION      go to state 10
    DEFINITIONS      go to state 11
    DEFINITION       go to state 12


State 2

    0 $accept: Program $end .

    $default  accept


State 3

   15 TYPE: TYPE_BASE . '*'
   16     | TYPE_BASE .

    '*'  shift, and go to state 13

    '*'       [reduce using rule 16 (TYPE)]
    $default  reduce using rule 16 (TYPE)


State 4

   33 DECLARATION: STRUCT . ID '{' TEMP_M DEFINITIONS '}'

    ID  shift, and go to state 14


State 5

    1 Program: Program PARTITION .

    $default  reduce using rule 1 (Program)


State 6

    5 PARTITION: FUNCTIONDEC .

    $default  reduce using rule 5 (PARTITION)


State 7

    4 PARTITION: FUNCTIONDEF .

    $default  reduce using rule 4 (PARTITION)


State 8

    8 FUNCTIONDEF: FUNC_DEF_PREFIX . STATEMENTS RETURN_STAT '}'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    TYPE_BASE        shift, and go to state 3
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    IF               shift, and go to state 23
    WHILE            shift, and go to state 24
    BREAK            shift, and go to state 25
    FOR              shift, and go to state 26
    CONTINUE         shift, and go to state 27
    '('              shift, and go to state 28
    '{'              shift, and go to state 29

    ID               [reduce using rule 19 (STATEMENTS)]
    T_BOOL_OPERATOR  [reduce using rule 19 (STATEMENTS)]
    OPERATOR2        [reduce using rule 19 (STATEMENTS)]
    TYPE_BASE        [reduce using rule 19 (STATEMENTS)]
    INT_VALUE        [reduce using rule 19 (STATEMENTS)]
    STRING           [reduce using rule 19 (STATEMENTS)]
    FLOAT_VALUE      [reduce using rule 19 (STATEMENTS)]
    BOOL_VALUE       [reduce using rule 19 (STATEMENTS)]
    T_INCRDECR       [reduce using rule 19 (STATEMENTS)]
    IF               [reduce using rule 19 (STATEMENTS)]
    WHILE            [reduce using rule 19 (STATEMENTS)]
    BREAK            [reduce using rule 19 (STATEMENTS)]
    FOR              [reduce using rule 19 (STATEMENTS)]
    CONTINUE         [reduce using rule 19 (STATEMENTS)]
    '('              [reduce using rule 19 (STATEMENTS)]
    '{'              [reduce using rule 19 (STATEMENTS)]
    $default         reduce using rule 19 (STATEMENTS)

    TYPE          go to state 30
    STATEMENTS    go to state 31
    STATEMENT     go to state 32
    STAT_BODY     go to state 33
    DEFINITION    go to state 34
    EXPRESSION    go to state 35
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38
    IF_BLOCK      go to state 39
    IF_PREFIX     go to state 40
    WHILE_BLOCK   go to state 41
    WHILE_PREFIX  go to state 42
    FOR_BLOCK     go to state 43
    FOR_PREFIX    go to state 44


State 9

    7 FUNCTIONDEC: TYPE . ID '(' PARAMETERS ')' ';'
    9 FUNC_DEF_PREFIX: TYPE . ID '(' PARAMETERS ')' '{'
   36 DEFINITION: TYPE . VARIABLES ';'

    ID   shift, and go to state 45
    '*'  shift, and go to state 46

    VARIABLES  go to state 47
    VARIABLE   go to state 48


State 10

    6 PARTITION: DECLARATION .

    $default  reduce using rule 6 (PARTITION)


State 11

    3 PARTITION: DEFINITIONS .
   34 DEFINITIONS: DEFINITIONS . DEFINITION

    TYPE_BASE  shift, and go to state 3

    TYPE_BASE  [reduce using rule 3 (PARTITION)]
    $default   reduce using rule 3 (PARTITION)

    TYPE        go to state 30
    DEFINITION  go to state 49


State 12

   35 DEFINITIONS: DEFINITION .

    $default  reduce using rule 35 (DEFINITIONS)


State 13

   15 TYPE: TYPE_BASE '*' .

    $default  reduce using rule 15 (TYPE)


State 14

   33 DECLARATION: STRUCT ID . '{' TEMP_M DEFINITIONS '}'

    '{'  shift, and go to state 50


State 15

   50 EXPRESSION: ID . EQUAL EXPRESSION
   57           | ID . T_INCRDECR
   60           | ID .
   62 L: ID . '[' EXPRESSION ']'
   71 FUNCTIONCALL: ID . '(' ACT_PARAS ')'

    EQUAL       shift, and go to state 51
    T_INCRDECR  shift, and go to state 52
    '('         shift, and go to state 53
    '['         shift, and go to state 54

    $default  reduce using rule 60 (EXPRESSION)


State 16

   55 EXPRESSION: T_BOOL_OPERATOR . EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 55
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 17

   54 EXPRESSION: OPERATOR2 . EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 56
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 18

   67 VALUE: INT_VALUE .

    $default  reduce using rule 67 (VALUE)


State 19

   70 VALUE: STRING .

    $default  reduce using rule 70 (VALUE)


State 20

   68 VALUE: FLOAT_VALUE .

    $default  reduce using rule 68 (VALUE)


State 21

   69 VALUE: BOOL_VALUE .

    $default  reduce using rule 69 (VALUE)


State 22

   58 EXPRESSION: T_INCRDECR . ID

    ID  shift, and go to state 57


State 23

   78 IF_PREFIX: IF . '(' BOOL_EXPRESSION ')'

    '('  shift, and go to state 58


State 24

   80 WHILE_PREFIX: WHILE . '(' BOOL_EXPRESSION ')'

    '('  shift, and go to state 59


State 25

   25 STATEMENT: BREAK . ';'

    ';'  shift, and go to state 60


State 26

   82 FOR_PREFIX: FOR . '(' FOR_INITIALS ';' BOOL_EXPRESSION ';'

    '('  shift, and go to state 61


State 27

   26 STATEMENT: CONTINUE . ';'

    ';'  shift, and go to state 62


State 28

   59 EXPRESSION: '(' . EXPRESSION ')'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 63
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 29

   28 STAT_BODY: '{' . TEMP_M STATEMENTS '}'

    $default  reduce using rule 29 (TEMP_M)

    TEMP_M  go to state 64


State 30

   36 DEFINITION: TYPE . VARIABLES ';'

    ID   shift, and go to state 65
    '*'  shift, and go to state 46

    VARIABLES  go to state 47
    VARIABLE   go to state 48


State 31

    8 FUNCTIONDEF: FUNC_DEF_PREFIX STATEMENTS . RETURN_STAT '}'
   17 STATEMENTS: STATEMENTS . STATEMENT

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    TYPE_BASE        shift, and go to state 3
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    IF               shift, and go to state 23
    WHILE            shift, and go to state 24
    BREAK            shift, and go to state 25
    FOR              shift, and go to state 26
    RETURN           shift, and go to state 66
    CONTINUE         shift, and go to state 27
    '('              shift, and go to state 28
    '{'              shift, and go to state 29

    $default  reduce using rule 32 (RETURN_STAT)

    TYPE          go to state 30
    STATEMENT     go to state 67
    STAT_BODY     go to state 33
    RETURN_STAT   go to state 68
    DEFINITION    go to state 34
    EXPRESSION    go to state 35
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38
    IF_BLOCK      go to state 39
    IF_PREFIX     go to state 40
    WHILE_BLOCK   go to state 41
    WHILE_PREFIX  go to state 42
    FOR_BLOCK     go to state 43
    FOR_PREFIX    go to state 44


State 32

   18 STATEMENTS: STATEMENT .

    $default  reduce using rule 18 (STATEMENTS)


State 33

   24 STATEMENT: STAT_BODY .

    $default  reduce using rule 24 (STATEMENT)


State 34

   20 STATEMENT: DEFINITION .

    $default  reduce using rule 20 (STATEMENT)


State 35

   21 STATEMENT: EXPRESSION . ';'
   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70
    ';'        shift, and go to state 71


State 36

   56 EXPRESSION: L .
   61 L: L . '[' EXPRESSION ']'

    '['  shift, and go to state 72

    $default  reduce using rule 56 (EXPRESSION)


State 37

   51 EXPRESSION: VALUE .

    $default  reduce using rule 51 (EXPRESSION)


State 38

   49 EXPRESSION: FUNCTIONCALL .

    $default  reduce using rule 49 (EXPRESSION)


State 39

   22 STATEMENT: IF_BLOCK .

    $default  reduce using rule 22 (STATEMENT)


State 40

   76 IF_BLOCK: IF_PREFIX . STATEMENT
   77         | IF_PREFIX . STATEMENT ELSE STATEMENT

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    TYPE_BASE        shift, and go to state 3
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    IF               shift, and go to state 23
    WHILE            shift, and go to state 24
    BREAK            shift, and go to state 25
    FOR              shift, and go to state 26
    CONTINUE         shift, and go to state 27
    '('              shift, and go to state 28
    '{'              shift, and go to state 29

    TYPE          go to state 30
    STATEMENT     go to state 73
    STAT_BODY     go to state 33
    DEFINITION    go to state 34
    EXPRESSION    go to state 35
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38
    IF_BLOCK      go to state 39
    IF_PREFIX     go to state 40
    WHILE_BLOCK   go to state 41
    WHILE_PREFIX  go to state 42
    FOR_BLOCK     go to state 43
    FOR_PREFIX    go to state 44


State 41

   23 STATEMENT: WHILE_BLOCK .

    $default  reduce using rule 23 (STATEMENT)


State 42

   79 WHILE_BLOCK: WHILE_PREFIX . STATEMENT

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    TYPE_BASE        shift, and go to state 3
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    IF               shift, and go to state 23
    WHILE            shift, and go to state 24
    BREAK            shift, and go to state 25
    FOR              shift, and go to state 26
    CONTINUE         shift, and go to state 27
    '('              shift, and go to state 28
    '{'              shift, and go to state 29

    TYPE          go to state 30
    STATEMENT     go to state 74
    STAT_BODY     go to state 33
    DEFINITION    go to state 34
    EXPRESSION    go to state 35
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38
    IF_BLOCK      go to state 39
    IF_PREFIX     go to state 40
    WHILE_BLOCK   go to state 41
    WHILE_PREFIX  go to state 42
    FOR_BLOCK     go to state 43
    FOR_PREFIX    go to state 44


State 43

   27 STATEMENT: FOR_BLOCK .

    $default  reduce using rule 27 (STATEMENT)


State 44

   81 FOR_BLOCK: FOR_PREFIX . FOR_ITERATES ')' STATEMENT

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    $default  reduce using rule 88 (FOR_ITERATES)

    EXPRESSION    go to state 75
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38
    FOR_ITERATES  go to state 76
    FOR_ITERATE   go to state 77


State 45

    7 FUNCTIONDEC: TYPE ID . '(' PARAMETERS ')' ';'
    9 FUNC_DEF_PREFIX: TYPE ID . '(' PARAMETERS ')' '{'
   39 VARIABLE: ID .
   40         | ID . EQUAL EXPRESSION
   42         | ID . ARRS EQUAL LIST
   44         | ID . ARRS

    EQUAL  shift, and go to state 78
    '('    shift, and go to state 79
    '['    shift, and go to state 80

    $default  reduce using rule 39 (VARIABLE)

    ARRS  go to state 81


State 46

   41 VARIABLE: '*' . ID EQUAL EXPRESSION
   43         | '*' . ID EQUAL LIST
   45         | '*' . ID

    ID  shift, and go to state 82


State 47

   36 DEFINITION: TYPE VARIABLES . ';'
   37 VARIABLES: VARIABLES . ',' VARIABLE

    ';'  shift, and go to state 83
    ','  shift, and go to state 84


State 48

   38 VARIABLES: VARIABLE .

    $default  reduce using rule 38 (VARIABLES)


State 49

   34 DEFINITIONS: DEFINITIONS DEFINITION .

    $default  reduce using rule 34 (DEFINITIONS)


State 50

   33 DECLARATION: STRUCT ID '{' . TEMP_M DEFINITIONS '}'

    $default  reduce using rule 29 (TEMP_M)

    TEMP_M  go to state 85


State 51

   50 EXPRESSION: ID EQUAL . EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 86
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 52

   57 EXPRESSION: ID T_INCRDECR .

    $default  reduce using rule 57 (EXPRESSION)


State 53

   71 FUNCTIONCALL: ID '(' . ACT_PARAS ')'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 87
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    $default  reduce using rule 74 (ACT_PARAS)

    EXPRESSION       go to state 88
    L                go to state 36
    BOOL_EXPRESSION  go to state 89
    VALUE            go to state 37
    FUNCTIONCALL     go to state 38
    ACT_PARAS        go to state 90
    ACT_PARA         go to state 91


State 54

   62 L: ID '[' . EXPRESSION ']'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 92
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 55

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   55           | T_BOOL_OPERATOR EXPRESSION .

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 55 (EXPRESSION)


State 56

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   54           | OPERATOR2 EXPRESSION .

    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 54 (EXPRESSION)


State 57

   58 EXPRESSION: T_INCRDECR ID .

    $default  reduce using rule 58 (EXPRESSION)


State 58

   78 IF_PREFIX: IF '(' . BOOL_EXPRESSION ')'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 87
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION       go to state 88
    L                go to state 36
    BOOL_EXPRESSION  go to state 93
    VALUE            go to state 37
    FUNCTIONCALL     go to state 38


State 59

   80 WHILE_PREFIX: WHILE '(' . BOOL_EXPRESSION ')'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 87
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION       go to state 88
    L                go to state 36
    BOOL_EXPRESSION  go to state 94
    VALUE            go to state 37
    FUNCTIONCALL     go to state 38


State 60

   25 STATEMENT: BREAK ';' .

    $default  reduce using rule 25 (STATEMENT)


State 61

   82 FOR_PREFIX: FOR '(' . FOR_INITIALS ';' BOOL_EXPRESSION ';'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    $default  reduce using rule 84 (FOR_INITIALS)

    EXPRESSION    go to state 95
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38
    FOR_INITIALS  go to state 96
    FOR_INITIAL   go to state 97


State 62

   26 STATEMENT: CONTINUE ';' .

    $default  reduce using rule 26 (STATEMENT)


State 63

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   59           | '(' EXPRESSION . ')'

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70
    ')'        shift, and go to state 98


State 64

   28 STAT_BODY: '{' TEMP_M . STATEMENTS '}'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    TYPE_BASE        shift, and go to state 3
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    IF               shift, and go to state 23
    WHILE            shift, and go to state 24
    BREAK            shift, and go to state 25
    FOR              shift, and go to state 26
    CONTINUE         shift, and go to state 27
    '('              shift, and go to state 28
    '{'              shift, and go to state 29

    ID               [reduce using rule 19 (STATEMENTS)]
    T_BOOL_OPERATOR  [reduce using rule 19 (STATEMENTS)]
    OPERATOR2        [reduce using rule 19 (STATEMENTS)]
    TYPE_BASE        [reduce using rule 19 (STATEMENTS)]
    INT_VALUE        [reduce using rule 19 (STATEMENTS)]
    STRING           [reduce using rule 19 (STATEMENTS)]
    FLOAT_VALUE      [reduce using rule 19 (STATEMENTS)]
    BOOL_VALUE       [reduce using rule 19 (STATEMENTS)]
    T_INCRDECR       [reduce using rule 19 (STATEMENTS)]
    IF               [reduce using rule 19 (STATEMENTS)]
    WHILE            [reduce using rule 19 (STATEMENTS)]
    BREAK            [reduce using rule 19 (STATEMENTS)]
    FOR              [reduce using rule 19 (STATEMENTS)]
    CONTINUE         [reduce using rule 19 (STATEMENTS)]
    '('              [reduce using rule 19 (STATEMENTS)]
    '{'              [reduce using rule 19 (STATEMENTS)]
    $default         reduce using rule 19 (STATEMENTS)

    TYPE          go to state 30
    STATEMENTS    go to state 99
    STATEMENT     go to state 32
    STAT_BODY     go to state 33
    DEFINITION    go to state 34
    EXPRESSION    go to state 35
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38
    IF_BLOCK      go to state 39
    IF_PREFIX     go to state 40
    WHILE_BLOCK   go to state 41
    WHILE_PREFIX  go to state 42
    FOR_BLOCK     go to state 43
    FOR_PREFIX    go to state 44


State 65

   39 VARIABLE: ID .
   40         | ID . EQUAL EXPRESSION
   42         | ID . ARRS EQUAL LIST
   44         | ID . ARRS

    EQUAL  shift, and go to state 78
    '['    shift, and go to state 80

    $default  reduce using rule 39 (VARIABLE)

    ARRS  go to state 81


State 66

   30 RETURN_STAT: RETURN . EXPRESSION ';'
   31            | RETURN . ';'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28
    ';'              shift, and go to state 100

    EXPRESSION    go to state 101
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 67

   17 STATEMENTS: STATEMENTS STATEMENT .

    $default  reduce using rule 17 (STATEMENTS)


State 68

    8 FUNCTIONDEF: FUNC_DEF_PREFIX STATEMENTS RETURN_STAT . '}'

    '}'  shift, and go to state 102


State 69

   53 EXPRESSION: EXPRESSION OPERATOR2 . EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 103
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 70

   52 EXPRESSION: EXPRESSION OPERATOR1 . EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 104
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 71

   21 STATEMENT: EXPRESSION ';' .

    $default  reduce using rule 21 (STATEMENT)


State 72

   61 L: L '[' . EXPRESSION ']'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 105
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 73

   76 IF_BLOCK: IF_PREFIX STATEMENT .
   77         | IF_PREFIX STATEMENT . ELSE STATEMENT

    ELSE  shift, and go to state 106

    $default  reduce using rule 76 (IF_BLOCK)


State 74

   79 WHILE_BLOCK: WHILE_PREFIX STATEMENT .

    $default  reduce using rule 79 (WHILE_BLOCK)


State 75

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   90 FOR_ITERATE: EXPRESSION .

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 90 (FOR_ITERATE)


State 76

   81 FOR_BLOCK: FOR_PREFIX FOR_ITERATES . ')' STATEMENT

    ')'  shift, and go to state 107


State 77

   87 FOR_ITERATES: FOR_ITERATE .
   89 FOR_ITERATE: FOR_ITERATE . ',' EXPRESSION

    ','  shift, and go to state 108

    $default  reduce using rule 87 (FOR_ITERATES)


State 78

   40 VARIABLE: ID EQUAL . EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 109
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 79

    7 FUNCTIONDEC: TYPE ID '(' . PARAMETERS ')' ';'
    9 FUNC_DEF_PREFIX: TYPE ID '(' . PARAMETERS ')' '{'

    TYPE_BASE  shift, and go to state 3

    $default  reduce using rule 11 (PARAMETERS)

    PARAMETERS  go to state 110
    PARAS       go to state 111
    PARA        go to state 112
    TYPE        go to state 113


State 80

   48 ARRS: '[' . INT_VALUE ']'

    INT_VALUE  shift, and go to state 114


State 81

   42 VARIABLE: ID ARRS . EQUAL LIST
   44         | ID ARRS .
   47 ARRS: ARRS . '[' INT_VALUE ']'

    EQUAL  shift, and go to state 115
    '['    shift, and go to state 116

    $default  reduce using rule 44 (VARIABLE)


State 82

   41 VARIABLE: '*' ID . EQUAL EXPRESSION
   43         | '*' ID . EQUAL LIST
   45         | '*' ID .

    EQUAL  shift, and go to state 117

    $default  reduce using rule 45 (VARIABLE)


State 83

   36 DEFINITION: TYPE VARIABLES ';' .

    $default  reduce using rule 36 (DEFINITION)


State 84

   37 VARIABLES: VARIABLES ',' . VARIABLE

    ID   shift, and go to state 65
    '*'  shift, and go to state 46

    VARIABLE  go to state 118


State 85

   33 DECLARATION: STRUCT ID '{' TEMP_M . DEFINITIONS '}'

    TYPE_BASE  shift, and go to state 3

    TYPE         go to state 30
    DEFINITIONS  go to state 119
    DEFINITION   go to state 12


State 86

   50 EXPRESSION: ID EQUAL EXPRESSION .
   52           | EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 50 (EXPRESSION)


State 87

   55 EXPRESSION: T_BOOL_OPERATOR . EXPRESSION
   66 BOOL_EXPRESSION: T_BOOL_OPERATOR . BOOL_EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 87
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION       go to state 120
    L                go to state 36
    BOOL_EXPRESSION  go to state 121
    VALUE            go to state 37
    FUNCTIONCALL     go to state 38


State 88

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   64 BOOL_EXPRESSION: EXPRESSION .
   65                | EXPRESSION . T_RELATION EXPRESSION

    T_RELATION  shift, and go to state 122
    OPERATOR2   shift, and go to state 69
    OPERATOR1   shift, and go to state 70

    $default  reduce using rule 64 (BOOL_EXPRESSION)


State 89

   63 BOOL_EXPRESSION: BOOL_EXPRESSION . T_BOOL_OPERATOR BOOL_EXPRESSION
   75 ACT_PARA: BOOL_EXPRESSION .

    T_BOOL_OPERATOR  shift, and go to state 123

    $default  reduce using rule 75 (ACT_PARA)


State 90

   71 FUNCTIONCALL: ID '(' ACT_PARAS . ')'
   72 ACT_PARAS: ACT_PARAS . ',' ACT_PARA

    ')'  shift, and go to state 124
    ','  shift, and go to state 125


State 91

   73 ACT_PARAS: ACT_PARA .

    $default  reduce using rule 73 (ACT_PARAS)


State 92

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   62 L: ID '[' EXPRESSION . ']'

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70
    ']'        shift, and go to state 126


State 93

   63 BOOL_EXPRESSION: BOOL_EXPRESSION . T_BOOL_OPERATOR BOOL_EXPRESSION
   78 IF_PREFIX: IF '(' BOOL_EXPRESSION . ')'

    T_BOOL_OPERATOR  shift, and go to state 123
    ')'              shift, and go to state 127


State 94

   63 BOOL_EXPRESSION: BOOL_EXPRESSION . T_BOOL_OPERATOR BOOL_EXPRESSION
   80 WHILE_PREFIX: WHILE '(' BOOL_EXPRESSION . ')'

    T_BOOL_OPERATOR  shift, and go to state 123
    ')'              shift, and go to state 128


State 95

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   86 FOR_INITIAL: EXPRESSION .

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 86 (FOR_INITIAL)


State 96

   82 FOR_PREFIX: FOR '(' FOR_INITIALS . ';' BOOL_EXPRESSION ';'

    ';'  shift, and go to state 129


State 97

   83 FOR_INITIALS: FOR_INITIAL .
   85 FOR_INITIAL: FOR_INITIAL . ',' EXPRESSION

    ','  shift, and go to state 130

    $default  reduce using rule 83 (FOR_INITIALS)


State 98

   59 EXPRESSION: '(' EXPRESSION ')' .

    $default  reduce using rule 59 (EXPRESSION)


State 99

   17 STATEMENTS: STATEMENTS . STATEMENT
   28 STAT_BODY: '{' TEMP_M STATEMENTS . '}'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    TYPE_BASE        shift, and go to state 3
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    IF               shift, and go to state 23
    WHILE            shift, and go to state 24
    BREAK            shift, and go to state 25
    FOR              shift, and go to state 26
    CONTINUE         shift, and go to state 27
    '('              shift, and go to state 28
    '}'              shift, and go to state 131
    '{'              shift, and go to state 29

    TYPE          go to state 30
    STATEMENT     go to state 67
    STAT_BODY     go to state 33
    DEFINITION    go to state 34
    EXPRESSION    go to state 35
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38
    IF_BLOCK      go to state 39
    IF_PREFIX     go to state 40
    WHILE_BLOCK   go to state 41
    WHILE_PREFIX  go to state 42
    FOR_BLOCK     go to state 43
    FOR_PREFIX    go to state 44


State 100

   31 RETURN_STAT: RETURN ';' .

    $default  reduce using rule 31 (RETURN_STAT)


State 101

   30 RETURN_STAT: RETURN EXPRESSION . ';'
   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70
    ';'        shift, and go to state 132


State 102

    8 FUNCTIONDEF: FUNC_DEF_PREFIX STATEMENTS RETURN_STAT '}' .

    $default  reduce using rule 8 (FUNCTIONDEF)


State 103

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   53           | EXPRESSION OPERATOR2 EXPRESSION .

    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 53 (EXPRESSION)


State 104

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   52           | EXPRESSION OPERATOR1 EXPRESSION .
   53           | EXPRESSION . OPERATOR2 EXPRESSION

    $default  reduce using rule 52 (EXPRESSION)


State 105

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   61 L: L '[' EXPRESSION . ']'

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70
    ']'        shift, and go to state 133


State 106

   77 IF_BLOCK: IF_PREFIX STATEMENT ELSE . STATEMENT

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    TYPE_BASE        shift, and go to state 3
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    IF               shift, and go to state 23
    WHILE            shift, and go to state 24
    BREAK            shift, and go to state 25
    FOR              shift, and go to state 26
    CONTINUE         shift, and go to state 27
    '('              shift, and go to state 28
    '{'              shift, and go to state 29

    TYPE          go to state 30
    STATEMENT     go to state 134
    STAT_BODY     go to state 33
    DEFINITION    go to state 34
    EXPRESSION    go to state 35
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38
    IF_BLOCK      go to state 39
    IF_PREFIX     go to state 40
    WHILE_BLOCK   go to state 41
    WHILE_PREFIX  go to state 42
    FOR_BLOCK     go to state 43
    FOR_PREFIX    go to state 44


State 107

   81 FOR_BLOCK: FOR_PREFIX FOR_ITERATES ')' . STATEMENT

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    TYPE_BASE        shift, and go to state 3
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    IF               shift, and go to state 23
    WHILE            shift, and go to state 24
    BREAK            shift, and go to state 25
    FOR              shift, and go to state 26
    CONTINUE         shift, and go to state 27
    '('              shift, and go to state 28
    '{'              shift, and go to state 29

    TYPE          go to state 30
    STATEMENT     go to state 135
    STAT_BODY     go to state 33
    DEFINITION    go to state 34
    EXPRESSION    go to state 35
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38
    IF_BLOCK      go to state 39
    IF_PREFIX     go to state 40
    WHILE_BLOCK   go to state 41
    WHILE_PREFIX  go to state 42
    FOR_BLOCK     go to state 43
    FOR_PREFIX    go to state 44


State 108

   89 FOR_ITERATE: FOR_ITERATE ',' . EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 136
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 109

   40 VARIABLE: ID EQUAL EXPRESSION .
   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 40 (VARIABLE)


State 110

    7 FUNCTIONDEC: TYPE ID '(' PARAMETERS . ')' ';'
    9 FUNC_DEF_PREFIX: TYPE ID '(' PARAMETERS . ')' '{'

    ')'  shift, and go to state 137


State 111

   10 PARAMETERS: PARAS .
   12 PARAS: PARAS . ',' PARA

    ','  shift, and go to state 138

    $default  reduce using rule 10 (PARAMETERS)


State 112

   13 PARAS: PARA .

    $default  reduce using rule 13 (PARAS)


State 113

   14 PARA: TYPE . ID

    ID  shift, and go to state 139


State 114

   48 ARRS: '[' INT_VALUE . ']'

    ']'  shift, and go to state 140


State 115

   42 VARIABLE: ID ARRS EQUAL . LIST

    '{'  shift, and go to state 141

    LIST  go to state 142


State 116

   47 ARRS: ARRS '[' . INT_VALUE ']'

    INT_VALUE  shift, and go to state 143


State 117

   41 VARIABLE: '*' ID EQUAL . EXPRESSION
   43         | '*' ID EQUAL . LIST

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28
    '{'              shift, and go to state 141

    LIST          go to state 144
    EXPRESSION    go to state 145
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 118

   37 VARIABLES: VARIABLES ',' VARIABLE .

    $default  reduce using rule 37 (VARIABLES)


State 119

   33 DECLARATION: STRUCT ID '{' TEMP_M DEFINITIONS . '}'
   34 DEFINITIONS: DEFINITIONS . DEFINITION

    TYPE_BASE  shift, and go to state 3
    '}'        shift, and go to state 146

    TYPE        go to state 30
    DEFINITION  go to state 49


State 120

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   55           | T_BOOL_OPERATOR EXPRESSION .
   64 BOOL_EXPRESSION: EXPRESSION .
   65                | EXPRESSION . T_RELATION EXPRESSION

    T_RELATION  shift, and go to state 122
    OPERATOR2   shift, and go to state 69
    OPERATOR1   shift, and go to state 70

    T_BOOL_OPERATOR  reduce using rule 55 (EXPRESSION)
    T_BOOL_OPERATOR  [reduce using rule 64 (BOOL_EXPRESSION)]
    ')'              reduce using rule 55 (EXPRESSION)
    ')'              [reduce using rule 64 (BOOL_EXPRESSION)]
    ';'              reduce using rule 55 (EXPRESSION)
    ';'              [reduce using rule 64 (BOOL_EXPRESSION)]
    '}'              reduce using rule 55 (EXPRESSION)
    '}'              [reduce using rule 64 (BOOL_EXPRESSION)]
    ','              reduce using rule 55 (EXPRESSION)
    ','              [reduce using rule 64 (BOOL_EXPRESSION)]
    $default         reduce using rule 55 (EXPRESSION)


State 121

   63 BOOL_EXPRESSION: BOOL_EXPRESSION . T_BOOL_OPERATOR BOOL_EXPRESSION
   66                | T_BOOL_OPERATOR BOOL_EXPRESSION .

    $default  reduce using rule 66 (BOOL_EXPRESSION)


State 122

   65 BOOL_EXPRESSION: EXPRESSION T_RELATION . EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 147
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 123

   63 BOOL_EXPRESSION: BOOL_EXPRESSION T_BOOL_OPERATOR . BOOL_EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 87
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION       go to state 88
    L                go to state 36
    BOOL_EXPRESSION  go to state 148
    VALUE            go to state 37
    FUNCTIONCALL     go to state 38


State 124

   71 FUNCTIONCALL: ID '(' ACT_PARAS ')' .

    $default  reduce using rule 71 (FUNCTIONCALL)


State 125

   72 ACT_PARAS: ACT_PARAS ',' . ACT_PARA

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 87
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION       go to state 88
    L                go to state 36
    BOOL_EXPRESSION  go to state 89
    VALUE            go to state 37
    FUNCTIONCALL     go to state 38
    ACT_PARA         go to state 149


State 126

   62 L: ID '[' EXPRESSION ']' .

    $default  reduce using rule 62 (L)


State 127

   78 IF_PREFIX: IF '(' BOOL_EXPRESSION ')' .

    $default  reduce using rule 78 (IF_PREFIX)


State 128

   80 WHILE_PREFIX: WHILE '(' BOOL_EXPRESSION ')' .

    $default  reduce using rule 80 (WHILE_PREFIX)


State 129

   82 FOR_PREFIX: FOR '(' FOR_INITIALS ';' . BOOL_EXPRESSION ';'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 87
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION       go to state 88
    L                go to state 36
    BOOL_EXPRESSION  go to state 150
    VALUE            go to state 37
    FUNCTIONCALL     go to state 38


State 130

   85 FOR_INITIAL: FOR_INITIAL ',' . EXPRESSION

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 16
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    EXPRESSION    go to state 151
    L             go to state 36
    VALUE         go to state 37
    FUNCTIONCALL  go to state 38


State 131

   28 STAT_BODY: '{' TEMP_M STATEMENTS '}' .

    $default  reduce using rule 28 (STAT_BODY)


State 132

   30 RETURN_STAT: RETURN EXPRESSION ';' .

    $default  reduce using rule 30 (RETURN_STAT)


State 133

   61 L: L '[' EXPRESSION ']' .

    $default  reduce using rule 61 (L)


State 134

   77 IF_BLOCK: IF_PREFIX STATEMENT ELSE STATEMENT .

    $default  reduce using rule 77 (IF_BLOCK)


State 135

   81 FOR_BLOCK: FOR_PREFIX FOR_ITERATES ')' STATEMENT .

    $default  reduce using rule 81 (FOR_BLOCK)


State 136

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   89 FOR_ITERATE: FOR_ITERATE ',' EXPRESSION .

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 89 (FOR_ITERATE)


State 137

    7 FUNCTIONDEC: TYPE ID '(' PARAMETERS ')' . ';'
    9 FUNC_DEF_PREFIX: TYPE ID '(' PARAMETERS ')' . '{'

    ';'  shift, and go to state 152
    '{'  shift, and go to state 153


State 138

   12 PARAS: PARAS ',' . PARA

    TYPE_BASE  shift, and go to state 3

    PARA  go to state 154
    TYPE  go to state 113


State 139

   14 PARA: TYPE ID .

    $default  reduce using rule 14 (PARA)


State 140

   48 ARRS: '[' INT_VALUE ']' .

    $default  reduce using rule 48 (ARRS)


State 141

   46 LIST: '{' . ACT_PARAS '}'

    ID               shift, and go to state 15
    T_BOOL_OPERATOR  shift, and go to state 87
    OPERATOR2        shift, and go to state 17
    INT_VALUE        shift, and go to state 18
    STRING           shift, and go to state 19
    FLOAT_VALUE      shift, and go to state 20
    BOOL_VALUE       shift, and go to state 21
    T_INCRDECR       shift, and go to state 22
    '('              shift, and go to state 28

    $default  reduce using rule 74 (ACT_PARAS)

    EXPRESSION       go to state 88
    L                go to state 36
    BOOL_EXPRESSION  go to state 89
    VALUE            go to state 37
    FUNCTIONCALL     go to state 38
    ACT_PARAS        go to state 155
    ACT_PARA         go to state 91


State 142

   42 VARIABLE: ID ARRS EQUAL LIST .

    $default  reduce using rule 42 (VARIABLE)


State 143

   47 ARRS: ARRS '[' INT_VALUE . ']'

    ']'  shift, and go to state 156


State 144

   43 VARIABLE: '*' ID EQUAL LIST .

    $default  reduce using rule 43 (VARIABLE)


State 145

   41 VARIABLE: '*' ID EQUAL EXPRESSION .
   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 41 (VARIABLE)


State 146

   33 DECLARATION: STRUCT ID '{' TEMP_M DEFINITIONS '}' .

    $default  reduce using rule 33 (DECLARATION)


State 147

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   65 BOOL_EXPRESSION: EXPRESSION T_RELATION EXPRESSION .

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 65 (BOOL_EXPRESSION)


State 148

   63 BOOL_EXPRESSION: BOOL_EXPRESSION . T_BOOL_OPERATOR BOOL_EXPRESSION
   63                | BOOL_EXPRESSION T_BOOL_OPERATOR BOOL_EXPRESSION .

    $default  reduce using rule 63 (BOOL_EXPRESSION)


State 149

   72 ACT_PARAS: ACT_PARAS ',' ACT_PARA .

    $default  reduce using rule 72 (ACT_PARAS)


State 150

   63 BOOL_EXPRESSION: BOOL_EXPRESSION . T_BOOL_OPERATOR BOOL_EXPRESSION
   82 FOR_PREFIX: FOR '(' FOR_INITIALS ';' BOOL_EXPRESSION . ';'

    T_BOOL_OPERATOR  shift, and go to state 123
    ';'              shift, and go to state 157


State 151

   52 EXPRESSION: EXPRESSION . OPERATOR1 EXPRESSION
   53           | EXPRESSION . OPERATOR2 EXPRESSION
   85 FOR_INITIAL: FOR_INITIAL ',' EXPRESSION .

    OPERATOR2  shift, and go to state 69
    OPERATOR1  shift, and go to state 70

    $default  reduce using rule 85 (FOR_INITIAL)


State 152

    7 FUNCTIONDEC: TYPE ID '(' PARAMETERS ')' ';' .

    $default  reduce using rule 7 (FUNCTIONDEC)


State 153

    9 FUNC_DEF_PREFIX: TYPE ID '(' PARAMETERS ')' '{' .

    $default  reduce using rule 9 (FUNC_DEF_PREFIX)


State 154

   12 PARAS: PARAS ',' PARA .

    $default  reduce using rule 12 (PARAS)


State 155

   46 LIST: '{' ACT_PARAS . '}'
   72 ACT_PARAS: ACT_PARAS . ',' ACT_PARA

    '}'  shift, and go to state 158
    ','  shift, and go to state 125


State 156

   47 ARRS: ARRS '[' INT_VALUE ']' .

    $default  reduce using rule 47 (ARRS)


State 157

   82 FOR_PREFIX: FOR '(' FOR_INITIALS ';' BOOL_EXPRESSION ';' .

    $default  reduce using rule 82 (FOR_PREFIX)


State 158

   46 LIST: '{' ACT_PARAS '}' .

    $default  reduce using rule 46 (LIST)
